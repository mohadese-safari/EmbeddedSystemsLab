
counter.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000019e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000016  00800060  0000019e  00000232  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  00800076  00800076  00000248  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000248  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000278  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000030  00000000  00000000  000002b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000065b  00000000  00000000  000002e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000005ac  00000000  00000000  0000093f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000223  00000000  00000000  00000eeb  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000008c  00000000  00000000  00001110  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000033b  00000000  00000000  0000119c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000fb  00000000  00000000  000014d7  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  000015d2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 6e 00 	jmp	0xdc	; 0xdc <__vector_8>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ee e9       	ldi	r30, 0x9E	; 158
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a6 37       	cpi	r26, 0x76	; 118
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a6 e7       	ldi	r26, 0x76	; 118
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a8 37       	cpi	r26, 0x78	; 120
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 cd 00 	jmp	0x19a	; 0x19a <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:
	count= (count+1)%10;
}

int main(void)
{
	DDRD = 0xFF;
  92:	8f ef       	ldi	r24, 0xFF	; 255
  94:	81 bb       	out	0x11, r24	; 17
	DDRC=0xFF;
  96:	84 bb       	out	0x14, r24	; 20
	PORTC=0x00;
  98:	15 ba       	out	0x15, r1	; 21
	TCCR1B = ((1<<CS11) | (1<<CS10));
  9a:	83 e0       	ldi	r24, 0x03	; 3
  9c:	8e bd       	out	0x2e, r24	; 46
	TIMSK |= (1 << TOIE1); // Enable Timer0 OverFlow Interrupt
  9e:	89 b7       	in	r24, 0x39	; 57
  a0:	84 60       	ori	r24, 0x04	; 4
  a2:	89 bf       	out	0x39, r24	; 57
	sei();
  a4:	78 94       	sei
	TCNT1 = timer1_initial_value;
  a6:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
  aa:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
  ae:	9d bd       	out	0x2d, r25	; 45
  b0:	8c bd       	out	0x2c, r24	; 44
	count = 0;
  b2:	10 92 77 00 	sts	0x0077, r1	; 0x800077 <__data_end+0x1>
  b6:	10 92 76 00 	sts	0x0076, r1	; 0x800076 <__data_end>
  ba:	ff cf       	rjmp	.-2      	; 0xba <main+0x28>

000000bc <showSegment>:
	{
	}
}

void showSegment(){
	int index = count%10;
  bc:	80 91 76 00 	lds	r24, 0x0076	; 0x800076 <__data_end>
  c0:	90 91 77 00 	lds	r25, 0x0077	; 0x800077 <__data_end+0x1>
  c4:	6a e0       	ldi	r22, 0x0A	; 10
  c6:	70 e0       	ldi	r23, 0x00	; 0
  c8:	0e 94 a5 00 	call	0x14a	; 0x14a <__divmodhi4>
	PORTD = digits[index];
  cc:	fc 01       	movw	r30, r24
  ce:	ee 0f       	add	r30, r30
  d0:	ff 1f       	adc	r31, r31
  d2:	ee 59       	subi	r30, 0x9E	; 158
  d4:	ff 4f       	sbci	r31, 0xFF	; 255
  d6:	80 81       	ld	r24, Z
  d8:	82 bb       	out	0x12, r24	; 18
  da:	08 95       	ret

000000dc <__vector_8>:
int count;
int timer1_initial_value= 65535-15625;// 31250 ticks for 1 second  15625
void showSegment();


ISR(TIMER1_OVF_vect){
  dc:	1f 92       	push	r1
  de:	0f 92       	push	r0
  e0:	0f b6       	in	r0, 0x3f	; 63
  e2:	0f 92       	push	r0
  e4:	11 24       	eor	r1, r1
  e6:	2f 93       	push	r18
  e8:	3f 93       	push	r19
  ea:	4f 93       	push	r20
  ec:	5f 93       	push	r21
  ee:	6f 93       	push	r22
  f0:	7f 93       	push	r23
  f2:	8f 93       	push	r24
  f4:	9f 93       	push	r25
  f6:	af 93       	push	r26
  f8:	bf 93       	push	r27
  fa:	ef 93       	push	r30
  fc:	ff 93       	push	r31
	showSegment();
  fe:	0e 94 5e 00 	call	0xbc	; 0xbc <showSegment>
	TCNT1 = timer1_initial_value;
 102:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 106:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 10a:	9d bd       	out	0x2d, r25	; 45
 10c:	8c bd       	out	0x2c, r24	; 44
	count= (count+1)%10;
 10e:	80 91 76 00 	lds	r24, 0x0076	; 0x800076 <__data_end>
 112:	90 91 77 00 	lds	r25, 0x0077	; 0x800077 <__data_end+0x1>
 116:	01 96       	adiw	r24, 0x01	; 1
 118:	6a e0       	ldi	r22, 0x0A	; 10
 11a:	70 e0       	ldi	r23, 0x00	; 0
 11c:	0e 94 a5 00 	call	0x14a	; 0x14a <__divmodhi4>
 120:	90 93 77 00 	sts	0x0077, r25	; 0x800077 <__data_end+0x1>
 124:	80 93 76 00 	sts	0x0076, r24	; 0x800076 <__data_end>
}
 128:	ff 91       	pop	r31
 12a:	ef 91       	pop	r30
 12c:	bf 91       	pop	r27
 12e:	af 91       	pop	r26
 130:	9f 91       	pop	r25
 132:	8f 91       	pop	r24
 134:	7f 91       	pop	r23
 136:	6f 91       	pop	r22
 138:	5f 91       	pop	r21
 13a:	4f 91       	pop	r20
 13c:	3f 91       	pop	r19
 13e:	2f 91       	pop	r18
 140:	0f 90       	pop	r0
 142:	0f be       	out	0x3f, r0	; 63
 144:	0f 90       	pop	r0
 146:	1f 90       	pop	r1
 148:	18 95       	reti

0000014a <__divmodhi4>:
 14a:	97 fb       	bst	r25, 7
 14c:	07 2e       	mov	r0, r23
 14e:	16 f4       	brtc	.+4      	; 0x154 <__divmodhi4+0xa>
 150:	00 94       	com	r0
 152:	07 d0       	rcall	.+14     	; 0x162 <__divmodhi4_neg1>
 154:	77 fd       	sbrc	r23, 7
 156:	09 d0       	rcall	.+18     	; 0x16a <__divmodhi4_neg2>
 158:	0e 94 b9 00 	call	0x172	; 0x172 <__udivmodhi4>
 15c:	07 fc       	sbrc	r0, 7
 15e:	05 d0       	rcall	.+10     	; 0x16a <__divmodhi4_neg2>
 160:	3e f4       	brtc	.+14     	; 0x170 <__divmodhi4_exit>

00000162 <__divmodhi4_neg1>:
 162:	90 95       	com	r25
 164:	81 95       	neg	r24
 166:	9f 4f       	sbci	r25, 0xFF	; 255
 168:	08 95       	ret

0000016a <__divmodhi4_neg2>:
 16a:	70 95       	com	r23
 16c:	61 95       	neg	r22
 16e:	7f 4f       	sbci	r23, 0xFF	; 255

00000170 <__divmodhi4_exit>:
 170:	08 95       	ret

00000172 <__udivmodhi4>:
 172:	aa 1b       	sub	r26, r26
 174:	bb 1b       	sub	r27, r27
 176:	51 e1       	ldi	r21, 0x11	; 17
 178:	07 c0       	rjmp	.+14     	; 0x188 <__udivmodhi4_ep>

0000017a <__udivmodhi4_loop>:
 17a:	aa 1f       	adc	r26, r26
 17c:	bb 1f       	adc	r27, r27
 17e:	a6 17       	cp	r26, r22
 180:	b7 07       	cpc	r27, r23
 182:	10 f0       	brcs	.+4      	; 0x188 <__udivmodhi4_ep>
 184:	a6 1b       	sub	r26, r22
 186:	b7 0b       	sbc	r27, r23

00000188 <__udivmodhi4_ep>:
 188:	88 1f       	adc	r24, r24
 18a:	99 1f       	adc	r25, r25
 18c:	5a 95       	dec	r21
 18e:	a9 f7       	brne	.-22     	; 0x17a <__udivmodhi4_loop>
 190:	80 95       	com	r24
 192:	90 95       	com	r25
 194:	bc 01       	movw	r22, r24
 196:	cd 01       	movw	r24, r26
 198:	08 95       	ret

0000019a <_exit>:
 19a:	f8 94       	cli

0000019c <__stop_program>:
 19c:	ff cf       	rjmp	.-2      	; 0x19c <__stop_program>
